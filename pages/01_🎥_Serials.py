import streamlit as st
import pandas as pd
import numpy as np
import ast
import faiss
from data.func import filter_by_ganre, embed_user

"""
## –°–µ—Ä–≤–∏—Å —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å–µ—Ä–∏–∞–ª–æ–≤ üìΩÔ∏è
"""

df = pd.read_csv('data/dataset.csv')
embeddings = np.load('data/embeddings_main.npy')
index = faiss.read_index('data/faiss_index_main.index')

df['ganres'] = df['ganres'].apply(lambda x: ast.literal_eval(x))

st.write(f'<p style="font-family: Arial, sans-serif; font-size: 24px; ">–ù–∞—à —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç \
         {len(df)} –ª—É—á—à–∏—Ö —Å–µ—Ä–∏–∞–ª–æ–≤</p>', unsafe_allow_html=True)

st.image('images/ser2.png')

ganres_lst = sorted(['–¥—Ä–∞–º–∞', '–¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π', '–±–∏–æ–≥—Ä–∞—Ñ–∏—è', '–∫–æ–º–µ–¥–∏—è', '—Ñ—ç–Ω—Ç–µ–∑–∏', '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–¥–ª—è –¥–µ—Ç–µ–π', '–º—É–ª—å—Ç—Å–µ—Ä–∏–∞–ª—ã', 
              '–º–µ–ª–æ–¥—Ä–∞–º–∞', '–±–æ–µ–≤–∏–∫', '–¥–µ—Ç–µ–∫—Ç–∏–≤', '—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '—Ç—Ä–∏–ª–ª–µ—Ä', '—Å–µ–º–µ–π–Ω—ã–π', '–∫—Ä–∏–º–∏–Ω–∞–ª', '–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π', '–º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ', 
              '–º–∏—Å—Ç–∏–∫–∞', '–∞–Ω–∏–º–µ', '—É–∂–∞—Å—ã', '—Å–ø–æ—Ä—Ç', '—Å–∫–µ—Ç—á-—à–æ—É', '–≤–æ–µ–Ω–Ω—ã–π', '–¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö', '–≤–µ—Å—Ç–µ—Ä–Ω'])

st.sidebar.header('–ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ :gear:')
choice_g = st.sidebar.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä—ã", options=ganres_lst)
n = st.sidebar.selectbox("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ", options=[5, 10, 15, 20, 30])
st.sidebar.info("üìö –î–ª—è –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, –∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º")

text = st.text_input('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')

button = st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å', type="primary")
    
if text and button:
    if len(choice_g) == 0:
        choice_g = ganres_lst
    filt_ind = filter_by_ganre(df, choice_g)
    user_emb = embed_user(filt_ind, embeddings, text)
   
    D, sorted_indices = index.search(user_emb.reshape(1, -1), n)
    top_ind = list(sorted_indices[0])
    output_dict = {}
    for i in top_ind:
        for ganre in df['ganres'][i]:
            if ganre in choice_g:
                output_dict[i] = df['ganres'][i]
    # st.write('output_dict')
    sorted_lst = sorted(output_dict.items(), key=lambda x: len(set(x[1]) & set(choice_g)), reverse=True)
    n_lst = [i[0] for i in sorted_lst[:n]]

    st.write(f'<p style="font-family: Arial, sans-serif; font-size: 18px; text-align: center;"><strong>–í—Å–µ–≥–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã—Ö \
         —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π {len(sorted_lst)}</strong></p>', unsafe_allow_html=True)
    st.write('\n')

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –Ω–∞–∑–≤–∞–Ω–∏–π
    for i in n_lst:
        col1, col2 = st.columns([3, 4]) 
        with col1:
            st.image(df['poster'][i], width=300)
        with col2:
            st.write(f"***–ù–∞–∑–≤–∞–Ω–∏–µ:*** {df['title'][i]}")
            st.write(f"***–ñ–∞–Ω—Ä:*** {', '.join(df['ganres'][i])}")
            st.write(f"***–û–ø–∏—Å–∞–Ω–∏–µ:*** {df['description'][i]}")
            st.markdown(f"[***—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–µ—Ä–∏–∞–ª***]({df['url'][i]})")
            st.write("")
            # st.write(f"<small>*–°—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –∫–æ—Å–∏–Ω—É—Å–Ω–æ–º—É —Å—Ö–æ–¥—Å—Ç–≤—É: {conf_dict[i]:.4f}*</small>", unsafe_allow_html=True)
        st.markdown(
        "<hr style='border: 2px solid #000; margin-top: 10px; margin-bottom: 10px;'>",
        unsafe_allow_html=True
    )